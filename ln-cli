#!/bin/sh

# Version number
version="1.0.0"
github_source="https://raw.githubusercontent.com/iamchokerman/ln-cli/master/ln-cli"
base_url="https://readlightnovels.net/"

######################
# Auxilary functions #
######################

show_version() {
	echo "version ${version}"
}

die () {
	err "$*"
	exit 1
}

update_script () {
	update="$(curl -s "https://raw.githubusercontent.com/iamchokerman/ln-cli/master/ln-cli" | diff -u "$0" -)"
	if [ -z "$update" ]; then
		inf "script is up to date :)"
	else
		if printf '%s\n' "$update" | patch "$0" - ; then
			inf "script has been updated"
		else
			die "can't update for some reason!"
		fi
	fi
}

###############
# TEXT OUTPUT #
###############

err () {
	# display an error message to stderr (in red)
	printf "\033[1;31m%s\033[0m\n" "$*" >&2
}

inf () {
	# display an informational message (first argument in green, second in magenta)
	printf "\033[1;32m%s \033[1;35m%s\033[0m\n" "$1" "$2"
}

prompt () {
	# prompts the user with message in $1-2 ($1 in blue, $2 in magenta) and saves the input to the variables in $REPLY and $REPLY2
	printf "\033[1;34m%s\033[1;35m%s\033[1;34m\033[0m" "$1" "$2"
	read -r REPLY REPLY2
}

menu_line_even () {
	# displays an even (cyan) line of a menu line with $2 as an indicator in [] and $1 as the option
	printf "\033[1;34m(\033[1;36m%s\033[1;34m) \033[1;36m%s\033[0m\n" "$2" "$1"
}

menu_line_odd() {
	# displays an odd (magenta) line of a menu line with $2 as an indicator in [] and $1 as the option
	printf "\033[1;35m(\033[1;35m%s\033[1;35m) \033[1;35m%s\033[0m\n" "$2" "$1"
}

menu_line_alternate() {
	menu_line_parity=${menu_line_parity:-0}
	if [ "$menu_line_parity" -eq 0 ]; then
		menu_line_odd "$1" "$2"
		menu_line_parity=1
	else
		menu_line_even "$1" "$2"
		menu_line_parity=0
	fi
}

if [ -z "$*" ]; then
    prompt '> '
    novel_title="$REPLY $REPLY2"
else
    novel_title=$*
fi


#############
# SEARCHING #
#############

search_ln () {
    search=$(printf '%s' "${novel_title}" | tr ' ' '+' )
    search_url="$base_url?s=$search"
    novel_caption=$(curl -s "$search_url" | pup 'div[class="col-md-3 col-sm-6 col-xs-6 home-truyendecu"] [class="caption"] h3 text{}' \
        | awk 'NR==1{print}')
    novel_link=$(curl -s "$search_url" | pup 'div[class="col-md-3 col-sm-6 col-xs-6 home-truyendecu"] a attr{href}' \
        | awk 'NR==1{print $1}'| rev | cut -c6- | rev)
    length=$(curl -s "$novel_link.html" | pup 'a[data-page]' | grep -B 1 Last | awk '{print $2}' | tr -d -c 0-9)
}

####################
# FETCH CHAPTER LIST
####################

fetch_chapters(){
    novel_id=$(curl -s "$novel_link.html" | pup 'div#wrap input#id_post attr{value}' | awk 'NR==1{print $1}')
    chapter_list="$novel_title/$novel_title.txt"
    [ -d "$novel_title" ] || mkdir "$novel_title"

    if [ ! -f "$chapter_list" ]; then
        INDEX=1
        while [ "$length" -gt "$INDEX" ]
        do
            echo $(curl -s --data "action=tw_ajax&type=pagination&id=$novel_id.html&page=$INDEX" https://readlightnovels.net/wp-admin/admin-ajax.php) \
	    | grep chapter-text | pup 'text{}' \
                | sed -f html-decode.sed | sed -e 's/^<span>//g' -e 's/<\\\/span>$//g' | tr ' ' '-' | sed -e '/^-/d' | grep . >> "$chapter_list"
            INDEX=$(($INDEX+1))
        done
    fi
}

select_chapter(){
    chapter_name=$(cat "$chapter_list" | fzf | sed -e 's/"//g')
    chapter_link="$novel_link/$chapter_name.html"
    chapters_folder="$novel_title/chapters/"
    chapter_text="$chapters_folder/'$chapter_name'.txt"
    [ -d "$chapters_folder" ] || mkdir "$chapters_folder"

    printf "$(curl -s "$chapter_link" | pup 'p' text{} \
	| sed -e '/^Novels For You, Everyday!/d' -e '/^Privacy Policy/d' -e '/^Copyright.*/d' -e '/^READLIGHTNOVELS.NET/d' -e '/^ToS/d' -e '/^Contact Us/d' \
        | sed '/|/d' | tail -n +2)" > "$chapter_text"
}

open_chapter(){
    $EDITOR "$chapter_text"
}

next_chapter (){
chapter_name=$(grep -w -A 1 "$chapter_name" "$novel_title/$novel_title.txt" | grep -v $chapter_name)
chapter_link="$novel_link/$chapter_name.html"
test=$(curl -s "$chapter_link" \
    | pup 'p' text{} | sed -e '/^Novels For You, Everyday!/d' -e '/^Privacy Policy/d' -e '/^Copyright.*/d' -e '/^READLIGHTNOVELS.NET/d' -e '/^ToS/d' -e '/^Contact Us/d' | sed '/|/d' | tail -n +2)
printf "$test" >> "$novel_title/Chapters/$chapter_name.txt"
$EDITOR "$novel_title/Chapters/$chapter_name.txt"
}

previous_chapter (){
chapter_name=$(grep -w -B 1 "$chapter_name" "$novel_title/$novel_title.txt" | grep -v $chapter_name)
chapter_link="$novel_link/$chapter_name.html"
test=$(curl -s "$chapter_link" \
    | pup 'p' text{} | sed -e '/^Novels For You, Everyday!/d' -e '/^Privacy Policy/d' -e '/^Copyright.*/d' -e '/^READLIGHTNOVELS.NET/d' -e '/^ToS/d' -e '/^Contact Us/d' | sed '/|/d' | tail -n +2)
printf "$test" >> "$novel_title/Chapters/$chapter_name.txt"
$EDITOR "$novel_title/Chapters/$chapter_name.txt"
}


search_ln
fetch_chapters
select_chapter
open_chapter

while :; do
    tput clear
    menu_line_alternate "next" "n"
    menu_line_alternate "previous" "p"
    menu_line_alternate "chapter" "s"
    menu_line_alternate "reopen" "r"
    menu_line_alternate "quit" "q" && printf "\n"
    prompt "> "
	choice="$REPLY"
	case $choice in
        n)
            tput clear
            next_chapter
            ;;
        p)
            tput clear
            previous_chapter
            ;;
        s)
            tput clear
            select_chapter
            open_chapter
            ;;
        r)
            tput clear
            open_chapter
            ;;
        q)
            break
            ;;
        *)
            tput clear
			err "nice choke, try again"
			continue
            ;;
    esac
done



#du -sh "$novel_title" | awk '{print $1}'

#chapter_name=$(grep -w -A 1 "$chapter_name" "$novel_title/$novel_title.txt" | grep -v $chapter_name)
#chapter_link="$novel_link/$chapter_name.html"
#
#test=$(curl -s "$chapter_link" \
#    | pup 'p' text{} | sed -e '/^Novels For You, Everyday!/d' -e '/^Privacy Policy/d' -e '/^Copyright.*/d' -e '/^READLIGHTNOVELS.NET/d' -e '/^ToS/d' -e '/^Contact Us/d' | sed '/|/d' | tail -n +2)
#printf "$test" >> "$novel_title/Chapters/$chapter_name.txt"
#
#echo $chapter_link

#$EDITOR "$novel_title/Chapters/$chapter_name.txt"

# DEPENDENCIES
# pup
